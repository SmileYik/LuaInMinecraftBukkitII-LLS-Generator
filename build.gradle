plugins {
    id 'java'
}

group = 'org.eu.smileyik'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'com.github.javaparser:javaparser-core:3.27.1'
    implementation 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation 'org.ow2.asm:asm:9.9'
    implementation 'org.ow2.asm:asm-commons:9.9'
    implementation 'org.ow2.asm:asm-analysis:9.9'
    implementation 'org.ow2.asm:asm-util:9.9'
    implementation 'org.ow2.asm:asm-tree:9.9'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.20.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.20.0'
    implementation 'com.fasterxml.woodstox:woodstox-core:6.5.0'
}

test {
    useJUnitPlatform()
}

tasks.register('generateByJavaStandardApi', JavaExec) {
    group = "execution"
    description = "generate lua file by java standard api source, depends your Java version"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.eu.smileyik.lls.JavaSourceGenerator'
    args = ["lua/java-standard-api"]
}

tasks.register('generateByPaperMaven', JavaExec) {
    group = "execution"
    description = "generate lua file by paper maven"
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'org.eu.smileyik.lls.maven.MavenGenerator'
    args = ["paper-maven.json"]
}
